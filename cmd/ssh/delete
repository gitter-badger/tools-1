#!/bin/bash

PREFIX='ssh'
source "config"
source "${LIB}/log"
source "${LIB}/installed"

cd ${CMD}/ssh

RequireInstall

USER="$1"
NUMBER="$2"

if [ -z "${USER}" ]; then
	while true; do
		Log "System user: " true
		read USER

		SYS_UID="$(id -g ${USER} 2>&1)"
		if echo "${SYS_UID}" | grep -q 'no such user'; then
			LogBrown "This user does not exist"
		else
			break
		fi
	done
fi

if [ -z "$NUMBER" ]; then
	LIST=$(${CMDNAME} ssh list "${USER}" -v)

	if echo "${LIST}" | grep -q 'No keys found'; then
		LogRed "This user does not have any keys"
		exit
	fi
	echo "${LIST}"

	NUM_REGEX='^[0-9]+$'
	while true; do
		Log "Key number to delete: " true
		read NUMBER

		if [[ $NUMBER =~ $NUM_REGEX ]]; then
			break
		fi
	done
fi

CONFIG_FILE="${SSH_KEYS}/${USER}/${SSH_FILE}"

KEYS_ALL="$(cat "${CONFIG_FILE}")"
KEYS=$(sed -n "/${SSH_CONFIG_BANNER_START}/,/${SSH_CONFIG_BANNER_END}/p" ${CONFIG_FILE})

# Remove the selected key from all keys
FORMATTED_KEYS=""
i=1
SKIP=false
MATCHED_NUMBER=false
while read -r ROW; do
	if echo "${ROW}" | grep -q "${SSH_KEY_BANNER_START}"; then
		if [ "${i}" -eq "${NUMBER}" ]; then
			SKIP=true
			MATCHED_NUMBER=true
		else
			SKIP=false
		fi
		((i++))
	fi

	if ${SKIP} && [ "${ROW}" != "${SSH_CONFIG_BANNER_END}" ]; then continue; fi

	if [ -z "${FORMATTED_KEYS}" ]; then
		FORMATTED_KEYS="${ROW}"
		continue
	fi

	FORMATTED_KEYS="${FORMATTED_KEYS}
${ROW}"
done <<< "${KEYS}"

if ! $MATCHED_NUMBER; then
	LogRed "This key number does not exist"
	exit
fi

# Prepare entire keys config block for printf
KEYS_ALL_FORMATTED=""
SKIP=false
while read -r ROW; do
	if echo "${ROW}" | grep -q "${SSH_CONFIG_BANNER_START}"; then
		SKIP=true
	fi

	if echo "${ROW}" | grep -q "${SSH_CONFIG_BANNER_END}"; then
		ROW="%s"
		SKIP=false
	fi

	if ${SKIP}; then continue; fi

	if [ -z "${KEYS_ALL_FORMATTED}" ]; then
		KEYS_ALL_FORMATTED="${ROW}"
		continue
	fi

	KEYS_ALL_FORMATTED="${KEYS_ALL_FORMATTED}
${ROW}"
done <<< "${KEYS_ALL}"

# Replace keys config block with the filtered one
NEW_KEYS=$(printf "${KEYS_ALL_FORMATTED}" "$FORMATTED_KEYS")

echo "${NEW_KEYS}" > "${CONFIG_FILE}"

echo ""
LogGreen "Key deleted successfully"
echo ""